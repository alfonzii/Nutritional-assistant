// Generated by view binder compiler. Do not edit!
package cz.cuni.mff.nutritionalassistant.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import cz.cuni.mff.nutritionalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductCommonLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout LinearLayoutProduct;

  @NonNull
  public final TextView textProductName;

  @NonNull
  public final ImageView thumbnailFood;

  private ItemProductCommonLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout LinearLayoutProduct, @NonNull TextView textProductName,
      @NonNull ImageView thumbnailFood) {
    this.rootView = rootView;
    this.LinearLayoutProduct = LinearLayoutProduct;
    this.textProductName = textProductName;
    this.thumbnailFood = thumbnailFood;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductCommonLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductCommonLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_product_common_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductCommonLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout LinearLayoutProduct = rootView.findViewById(R.id.LinearLayout_product);
      if (LinearLayoutProduct == null) {
        missingId = "LinearLayoutProduct";
        break missingId;
      }
      TextView textProductName = rootView.findViewById(R.id.text_product_name);
      if (textProductName == null) {
        missingId = "textProductName";
        break missingId;
      }
      ImageView thumbnailFood = rootView.findViewById(R.id.thumbnail_food);
      if (thumbnailFood == null) {
        missingId = "thumbnailFood";
        break missingId;
      }
      return new ItemProductCommonLayoutBinding((ConstraintLayout) rootView, LinearLayoutProduct,
          textProductName, thumbnailFood);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
