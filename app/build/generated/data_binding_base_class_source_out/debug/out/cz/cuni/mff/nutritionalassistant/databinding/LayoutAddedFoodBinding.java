// Generated by view binder compiler. Do not edit!
package cz.cuni.mff.nutritionalassistant.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import cz.cuni.mff.nutritionalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutAddedFoodBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout layoutAddedFood;

  @NonNull
  public final TextView textCaloriesAddedFood;

  @NonNull
  public final TextView textNameAddedFood;

  @NonNull
  public final TextView textWeightAddedFood;

  private LayoutAddedFoodBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout layoutAddedFood, @NonNull TextView textCaloriesAddedFood,
      @NonNull TextView textNameAddedFood, @NonNull TextView textWeightAddedFood) {
    this.rootView = rootView;
    this.layoutAddedFood = layoutAddedFood;
    this.textCaloriesAddedFood = textCaloriesAddedFood;
    this.textNameAddedFood = textNameAddedFood;
    this.textWeightAddedFood = textWeightAddedFood;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAddedFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAddedFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_added_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAddedFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout layoutAddedFood = rootView.findViewById(R.id.layout_added_food);
      if (layoutAddedFood == null) {
        missingId = "layoutAddedFood";
        break missingId;
      }
      TextView textCaloriesAddedFood = rootView.findViewById(R.id.text_calories_added_food);
      if (textCaloriesAddedFood == null) {
        missingId = "textCaloriesAddedFood";
        break missingId;
      }
      TextView textNameAddedFood = rootView.findViewById(R.id.text_name_added_food);
      if (textNameAddedFood == null) {
        missingId = "textNameAddedFood";
        break missingId;
      }
      TextView textWeightAddedFood = rootView.findViewById(R.id.text_weight_added_food);
      if (textWeightAddedFood == null) {
        missingId = "textWeightAddedFood";
        break missingId;
      }
      return new LayoutAddedFoodBinding((LinearLayout) rootView, layoutAddedFood,
          textCaloriesAddedFood, textNameAddedFood, textWeightAddedFood);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
