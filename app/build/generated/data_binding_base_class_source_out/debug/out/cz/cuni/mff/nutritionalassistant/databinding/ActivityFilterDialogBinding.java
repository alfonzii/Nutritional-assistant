// Generated by view binder compiler. Do not edit!
package cz.cuni.mff.nutritionalassistant.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import cz.cuni.mff.nutritionalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFilterDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout ConstraintLayoutButton;

  @NonNull
  public final ConstraintLayout ConstraintLayoutCalories;

  @NonNull
  public final ConstraintLayout ConstraintLayoutCarbs;

  @NonNull
  public final ConstraintLayout ConstraintLayoutFats;

  @NonNull
  public final ConstraintLayout ConstraintLayoutProteins;

  @NonNull
  public final LinearLayout LinearLayoutParent;

  @NonNull
  public final Button buttonApply;

  @NonNull
  public final EditText editMaxCalories;

  @NonNull
  public final EditText editMaxCarbs;

  @NonNull
  public final EditText editMaxFats;

  @NonNull
  public final EditText editMaxProteins;

  @NonNull
  public final EditText editMinCalories;

  @NonNull
  public final EditText editMinCarbs;

  @NonNull
  public final EditText editMinFats;

  @NonNull
  public final EditText editMinProteins;

  @NonNull
  public final TextView textCalories;

  @NonNull
  public final TextView textCarbs;

  @NonNull
  public final TextView textFats;

  @NonNull
  public final TextView textMaxCalories;

  @NonNull
  public final TextView textMaxCarbs;

  @NonNull
  public final TextView textMaxFats;

  @NonNull
  public final TextView textMaxProteins;

  @NonNull
  public final TextView textMinCalories;

  @NonNull
  public final TextView textMinCarbs;

  @NonNull
  public final TextView textMinFats;

  @NonNull
  public final TextView textMinProteins;

  @NonNull
  public final TextView textProteins;

  private ActivityFilterDialogBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout ConstraintLayoutButton,
      @NonNull ConstraintLayout ConstraintLayoutCalories,
      @NonNull ConstraintLayout ConstraintLayoutCarbs,
      @NonNull ConstraintLayout ConstraintLayoutFats,
      @NonNull ConstraintLayout ConstraintLayoutProteins, @NonNull LinearLayout LinearLayoutParent,
      @NonNull Button buttonApply, @NonNull EditText editMaxCalories,
      @NonNull EditText editMaxCarbs, @NonNull EditText editMaxFats,
      @NonNull EditText editMaxProteins, @NonNull EditText editMinCalories,
      @NonNull EditText editMinCarbs, @NonNull EditText editMinFats,
      @NonNull EditText editMinProteins, @NonNull TextView textCalories,
      @NonNull TextView textCarbs, @NonNull TextView textFats, @NonNull TextView textMaxCalories,
      @NonNull TextView textMaxCarbs, @NonNull TextView textMaxFats,
      @NonNull TextView textMaxProteins, @NonNull TextView textMinCalories,
      @NonNull TextView textMinCarbs, @NonNull TextView textMinFats,
      @NonNull TextView textMinProteins, @NonNull TextView textProteins) {
    this.rootView = rootView;
    this.ConstraintLayoutButton = ConstraintLayoutButton;
    this.ConstraintLayoutCalories = ConstraintLayoutCalories;
    this.ConstraintLayoutCarbs = ConstraintLayoutCarbs;
    this.ConstraintLayoutFats = ConstraintLayoutFats;
    this.ConstraintLayoutProteins = ConstraintLayoutProteins;
    this.LinearLayoutParent = LinearLayoutParent;
    this.buttonApply = buttonApply;
    this.editMaxCalories = editMaxCalories;
    this.editMaxCarbs = editMaxCarbs;
    this.editMaxFats = editMaxFats;
    this.editMaxProteins = editMaxProteins;
    this.editMinCalories = editMinCalories;
    this.editMinCarbs = editMinCarbs;
    this.editMinFats = editMinFats;
    this.editMinProteins = editMinProteins;
    this.textCalories = textCalories;
    this.textCarbs = textCarbs;
    this.textFats = textFats;
    this.textMaxCalories = textMaxCalories;
    this.textMaxCarbs = textMaxCarbs;
    this.textMaxFats = textMaxFats;
    this.textMaxProteins = textMaxProteins;
    this.textMinCalories = textMinCalories;
    this.textMinCarbs = textMinCarbs;
    this.textMinFats = textMinFats;
    this.textMinProteins = textMinProteins;
    this.textProteins = textProteins;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFilterDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFilterDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_filter_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFilterDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ConstraintLayout ConstraintLayoutButton = rootView.findViewById(R.id.ConstraintLayout_button);
      if (ConstraintLayoutButton == null) {
        missingId = "ConstraintLayoutButton";
        break missingId;
      }
      ConstraintLayout ConstraintLayoutCalories = rootView.findViewById(R.id.ConstraintLayout_calories);
      if (ConstraintLayoutCalories == null) {
        missingId = "ConstraintLayoutCalories";
        break missingId;
      }
      ConstraintLayout ConstraintLayoutCarbs = rootView.findViewById(R.id.ConstraintLayout_carbs);
      if (ConstraintLayoutCarbs == null) {
        missingId = "ConstraintLayoutCarbs";
        break missingId;
      }
      ConstraintLayout ConstraintLayoutFats = rootView.findViewById(R.id.ConstraintLayout_fats);
      if (ConstraintLayoutFats == null) {
        missingId = "ConstraintLayoutFats";
        break missingId;
      }
      ConstraintLayout ConstraintLayoutProteins = rootView.findViewById(R.id.ConstraintLayout_proteins);
      if (ConstraintLayoutProteins == null) {
        missingId = "ConstraintLayoutProteins";
        break missingId;
      }
      LinearLayout LinearLayoutParent = rootView.findViewById(R.id.LinearLayout_parent);
      if (LinearLayoutParent == null) {
        missingId = "LinearLayoutParent";
        break missingId;
      }
      Button buttonApply = rootView.findViewById(R.id.button_apply);
      if (buttonApply == null) {
        missingId = "buttonApply";
        break missingId;
      }
      EditText editMaxCalories = rootView.findViewById(R.id.edit_max_calories);
      if (editMaxCalories == null) {
        missingId = "editMaxCalories";
        break missingId;
      }
      EditText editMaxCarbs = rootView.findViewById(R.id.edit_max_carbs);
      if (editMaxCarbs == null) {
        missingId = "editMaxCarbs";
        break missingId;
      }
      EditText editMaxFats = rootView.findViewById(R.id.edit_max_fats);
      if (editMaxFats == null) {
        missingId = "editMaxFats";
        break missingId;
      }
      EditText editMaxProteins = rootView.findViewById(R.id.edit_max_proteins);
      if (editMaxProteins == null) {
        missingId = "editMaxProteins";
        break missingId;
      }
      EditText editMinCalories = rootView.findViewById(R.id.edit_min_calories);
      if (editMinCalories == null) {
        missingId = "editMinCalories";
        break missingId;
      }
      EditText editMinCarbs = rootView.findViewById(R.id.edit_min_carbs);
      if (editMinCarbs == null) {
        missingId = "editMinCarbs";
        break missingId;
      }
      EditText editMinFats = rootView.findViewById(R.id.edit_min_fats);
      if (editMinFats == null) {
        missingId = "editMinFats";
        break missingId;
      }
      EditText editMinProteins = rootView.findViewById(R.id.edit_min_proteins);
      if (editMinProteins == null) {
        missingId = "editMinProteins";
        break missingId;
      }
      TextView textCalories = rootView.findViewById(R.id.text_calories);
      if (textCalories == null) {
        missingId = "textCalories";
        break missingId;
      }
      TextView textCarbs = rootView.findViewById(R.id.text_carbs);
      if (textCarbs == null) {
        missingId = "textCarbs";
        break missingId;
      }
      TextView textFats = rootView.findViewById(R.id.text_fats);
      if (textFats == null) {
        missingId = "textFats";
        break missingId;
      }
      TextView textMaxCalories = rootView.findViewById(R.id.text_max_calories);
      if (textMaxCalories == null) {
        missingId = "textMaxCalories";
        break missingId;
      }
      TextView textMaxCarbs = rootView.findViewById(R.id.text_max_carbs);
      if (textMaxCarbs == null) {
        missingId = "textMaxCarbs";
        break missingId;
      }
      TextView textMaxFats = rootView.findViewById(R.id.text_max_fats);
      if (textMaxFats == null) {
        missingId = "textMaxFats";
        break missingId;
      }
      TextView textMaxProteins = rootView.findViewById(R.id.text_max_proteins);
      if (textMaxProteins == null) {
        missingId = "textMaxProteins";
        break missingId;
      }
      TextView textMinCalories = rootView.findViewById(R.id.text_min_calories);
      if (textMinCalories == null) {
        missingId = "textMinCalories";
        break missingId;
      }
      TextView textMinCarbs = rootView.findViewById(R.id.text_min_carbs);
      if (textMinCarbs == null) {
        missingId = "textMinCarbs";
        break missingId;
      }
      TextView textMinFats = rootView.findViewById(R.id.text_min_fats);
      if (textMinFats == null) {
        missingId = "textMinFats";
        break missingId;
      }
      TextView textMinProteins = rootView.findViewById(R.id.text_min_proteins);
      if (textMinProteins == null) {
        missingId = "textMinProteins";
        break missingId;
      }
      TextView textProteins = rootView.findViewById(R.id.text_proteins);
      if (textProteins == null) {
        missingId = "textProteins";
        break missingId;
      }
      return new ActivityFilterDialogBinding((LinearLayout) rootView, ConstraintLayoutButton,
          ConstraintLayoutCalories, ConstraintLayoutCarbs, ConstraintLayoutFats,
          ConstraintLayoutProteins, LinearLayoutParent, buttonApply, editMaxCalories, editMaxCarbs,
          editMaxFats, editMaxProteins, editMinCalories, editMinCarbs, editMinFats, editMinProteins,
          textCalories, textCarbs, textFats, textMaxCalories, textMaxCarbs, textMaxFats,
          textMaxProteins, textMinCalories, textMinCarbs, textMinFats, textMinProteins,
          textProteins);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
