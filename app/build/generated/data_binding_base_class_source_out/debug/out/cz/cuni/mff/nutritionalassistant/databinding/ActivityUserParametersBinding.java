// Generated by view binder compiler. Do not edit!
package cz.cuni.mff.nutritionalassistant.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.constraint.Guideline;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import cz.cuni.mff.nutritionalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserParametersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonApply;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final EditText numberAge;

  @NonNull
  public final EditText numberHeight;

  @NonNull
  public final EditText numberWeight;

  @NonNull
  public final Spinner spinnerSex;

  @NonNull
  public final TextView textAge;

  @NonNull
  public final TextView textHeight;

  @NonNull
  public final TextView textHeightUnits;

  @NonNull
  public final TextView textSex;

  @NonNull
  public final TextView textWeight;

  @NonNull
  public final TextView textWeightUnits;

  private ActivityUserParametersBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonApply, @NonNull Guideline guideline, @NonNull Guideline guideline2,
      @NonNull EditText numberAge, @NonNull EditText numberHeight, @NonNull EditText numberWeight,
      @NonNull Spinner spinnerSex, @NonNull TextView textAge, @NonNull TextView textHeight,
      @NonNull TextView textHeightUnits, @NonNull TextView textSex, @NonNull TextView textWeight,
      @NonNull TextView textWeightUnits) {
    this.rootView = rootView;
    this.buttonApply = buttonApply;
    this.guideline = guideline;
    this.guideline2 = guideline2;
    this.numberAge = numberAge;
    this.numberHeight = numberHeight;
    this.numberWeight = numberWeight;
    this.spinnerSex = spinnerSex;
    this.textAge = textAge;
    this.textHeight = textHeight;
    this.textHeightUnits = textHeightUnits;
    this.textSex = textSex;
    this.textWeight = textWeight;
    this.textWeightUnits = textWeightUnits;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserParametersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserParametersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_parameters, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserParametersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button buttonApply = rootView.findViewById(R.id.button_apply);
      if (buttonApply == null) {
        missingId = "buttonApply";
        break missingId;
      }
      Guideline guideline = rootView.findViewById(R.id.guideline);
      if (guideline == null) {
        missingId = "guideline";
        break missingId;
      }
      Guideline guideline2 = rootView.findViewById(R.id.guideline2);
      if (guideline2 == null) {
        missingId = "guideline2";
        break missingId;
      }
      EditText numberAge = rootView.findViewById(R.id.number_age);
      if (numberAge == null) {
        missingId = "numberAge";
        break missingId;
      }
      EditText numberHeight = rootView.findViewById(R.id.number_height);
      if (numberHeight == null) {
        missingId = "numberHeight";
        break missingId;
      }
      EditText numberWeight = rootView.findViewById(R.id.number_weight);
      if (numberWeight == null) {
        missingId = "numberWeight";
        break missingId;
      }
      Spinner spinnerSex = rootView.findViewById(R.id.spinner_sex);
      if (spinnerSex == null) {
        missingId = "spinnerSex";
        break missingId;
      }
      TextView textAge = rootView.findViewById(R.id.text_age);
      if (textAge == null) {
        missingId = "textAge";
        break missingId;
      }
      TextView textHeight = rootView.findViewById(R.id.text_height);
      if (textHeight == null) {
        missingId = "textHeight";
        break missingId;
      }
      TextView textHeightUnits = rootView.findViewById(R.id.text_height_units);
      if (textHeightUnits == null) {
        missingId = "textHeightUnits";
        break missingId;
      }
      TextView textSex = rootView.findViewById(R.id.text_sex);
      if (textSex == null) {
        missingId = "textSex";
        break missingId;
      }
      TextView textWeight = rootView.findViewById(R.id.text_weight);
      if (textWeight == null) {
        missingId = "textWeight";
        break missingId;
      }
      TextView textWeightUnits = rootView.findViewById(R.id.text_weight_units);
      if (textWeightUnits == null) {
        missingId = "textWeightUnits";
        break missingId;
      }
      return new ActivityUserParametersBinding((ConstraintLayout) rootView, buttonApply, guideline,
          guideline2, numberAge, numberHeight, numberWeight, spinnerSex, textAge, textHeight,
          textHeightUnits, textSex, textWeight, textWeightUnits);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
