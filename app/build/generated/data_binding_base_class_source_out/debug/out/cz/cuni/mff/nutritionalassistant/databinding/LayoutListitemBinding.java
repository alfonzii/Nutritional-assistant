// Generated by view binder compiler. Do not edit!
package cz.cuni.mff.nutritionalassistant.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.RelativeLayout;
import android.widget.TextView;
import cz.cuni.mff.nutritionalassistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutListitemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout parentLayout;

  @NonNull
  public final TextView word;

  private LayoutListitemBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout parentLayout, @NonNull TextView word) {
    this.rootView = rootView;
    this.parentLayout = parentLayout;
    this.word = word;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutListitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutListitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_listitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutListitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      RelativeLayout parentLayout = rootView.findViewById(R.id.parent_layout);
      if (parentLayout == null) {
        missingId = "parentLayout";
        break missingId;
      }
      TextView word = rootView.findViewById(R.id.word);
      if (word == null) {
        missingId = "word";
        break missingId;
      }
      return new LayoutListitemBinding((RelativeLayout) rootView, parentLayout, word);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
